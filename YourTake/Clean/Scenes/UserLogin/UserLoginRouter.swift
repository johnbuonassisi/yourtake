//
//  UserLoginRouter.swift
//  YourTake
//
//  Created by John Buonassisi on 2017-04-15.
//  Copyright (c) 2017 Enovi Inc. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol UserLoginRouterInput
{
  func navigateToChallengeScene()
  func navigateToSignupScene()
  func presentAlert()
}

class UserLoginRouter: UserLoginRouterInput
{
  weak var viewController: UserLoginViewController!
  
  // MARK: - Navigation
  
  func navigateToChallengeScene() {
    
    // Present user with an alert and dismiss alert after 3 seconds
    let alert = UIAlertController(title: "Yay!",
                                  message: "You were successfully logged in",
                                  preferredStyle: .alert)
    self.viewController.present(alert, animated: true, completion: nil)
    
    let time = DispatchTime.now() + 1
    DispatchQueue.main.asyncAfter(deadline: time, execute: {
      alert.dismiss(animated: true, completion:{
        self.viewController.navigationController?.navigationBar.isHidden = false
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let listChallengesViewController = storyboard.instantiateViewController(withIdentifier: "ChallengeList")
        UIApplication.shared.keyWindow?.rootViewController = listChallengesViewController
      })
    })

  }
  
  func navigateToForgotPasswordScene() {
    let forgotPasswordVc = UserForgotLoginPasswordViewController()
    viewController.navigationController?.pushViewController(forgotPasswordVc, animated: true)
  }
  
  func navigateToSignupScene() {
    _ = viewController.navigationController?.popViewController(animated: true)
  }
  
  func presentAlert() {
    self.presentAlert(withTitle: "Ooops!",
                      withMessage: "Something went wrong, try again",
                      withActionTitle: "Let me try again")
  }
  
  private func presentAlert(withTitle title: String,
                            withMessage message: String,
                            withActionTitle actionTitle: String) {
    
    let alert = UIAlertController(title: title,
                                  message: message,
                                  preferredStyle: .alert)
    let action = UIAlertAction(title: actionTitle,
                               style: .default,
                               handler: {
                                (action: UIAlertAction!) in alert.dismiss(animated: true, completion: nil)
    })
    alert.addAction(action)
    viewController.present(alert, animated: true, completion: nil)
  }
  
  // MARK: - Communication
  
  func passDataToNextScene(segue: UIStoryboardSegue)
  {
    // NOTE: Teach the router which scenes it can communicate with
    
    if segue.identifier == "ShowSomewhereScene" {
      passDataToSomewhereScene(segue: segue)
    }
  }
  
  func passDataToSomewhereScene(segue: UIStoryboardSegue)
  {
    // NOTE: Teach the router how to pass data to the next scene
    
    // let someWhereViewController = segue.destinationViewController as! SomeWhereViewController
    // someWhereViewController.output.name = viewController.output.name
  }
}
