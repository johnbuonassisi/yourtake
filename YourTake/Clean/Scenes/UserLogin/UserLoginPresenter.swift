//
//  UserLoginPresenter.swift
//  YourTake
//
//  Created by John Buonassisi on 2017-04-15.
//  Copyright (c) 2017 Enovi Inc. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol UserLoginPresenterInput
{
  func presentLogin(response: UserLogin.Login.Response)
  func presentVerifyPassword(response: UserLogin.EnableLogin.Response)
}

protocol UserLoginPresenterOutput: class
{
  func displayLogin(viewModel: UserLogin.Login.ViewModel)
  func displayVerifyPassword(viewModel: UserLogin.EnableLogin.ViewModel)
}

class UserLoginPresenter: UserLoginPresenterInput
{
  weak var output: UserLoginPresenterOutput!
  
  private let SYSTEM_BLUE_COLOUR = UIColor(red: 0.0,
                                        green: 122.0/255.0,
                                        blue: 255.0/255.0,
                                        alpha: 1.0)
  private let SYSTEM_LIGHT_GRAY_COLOUR = UIColor(red: 180.0/255.0,
                                                 green: 180.0/255.0,
                                                 blue: 180.0/255.0,
                                                 alpha: 1.0)
  
  // MARK: - Presentation logic
  
  func presentLogin(response: UserLogin.Login.Response)
  {
    // NOTE: Format the response from the Interactor and pass the result back to the View Controller
    let isLoginButtonEnabled = response.isPasswordValid && response.isUserNameEntered
    var loginButtonColour =  SYSTEM_LIGHT_GRAY_COLOUR
    if( isLoginButtonEnabled) {
      loginButtonColour = SYSTEM_BLUE_COLOUR
    }
    
    let viewModel = UserLogin.Login.ViewModel(isUserLoggedIn: response.isUserLoggedIn,
                                              isPasswordSwitchOn: response.isPasswordValid,
                                              isLoginButtonEnabled: isLoginButtonEnabled,
                                              isForgotPasswordButtonEnabled: true,
                                              isSignupButtonEnabled: true,
                                              loginButtonColour: loginButtonColour)
    output.displayLogin(viewModel: viewModel)
  }
  
  func presentVerifyPassword(response: UserLogin.EnableLogin.Response) {
    
    let isLoginButtonEnabled = response.isPasswordValid && response.isUsernameEntered
    var loginButtonColour = SYSTEM_LIGHT_GRAY_COLOUR
    if isLoginButtonEnabled {
      loginButtonColour = SYSTEM_BLUE_COLOUR
    }
    
    let viewModel = UserLogin.EnableLogin.ViewModel(isPasswordSwitchOn: response.isPasswordValid,
                                                    isLoginButtonEnabled: isLoginButtonEnabled,
                                                    loginButtonColour: loginButtonColour)
    output.displayVerifyPassword(viewModel: viewModel)
  }
}
