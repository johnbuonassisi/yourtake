//
//  FriendManagementViewController.swift
//  YourTake
//
//  Created by John Buonassisi on 2017-11-28.
//  Copyright (c) 2017 Enovi Inc.. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol FriendManagementViewControllerInput {
    func displayFriends(response: FriendManagementScene.FetchFriends.ViewModel)
}

protocol FriendManagementViewControllerOutput {
    func fetchFriends(request: FriendManagementScene.FetchFriends.Request)
    func acceptFriendRequest(request: FriendManagementScene.AcceptFriendRequest.Request)
    func sendFriendRequest(request: FriendManagementScene.SendFriendRequest.Request)
    func updateNetworkStatus(request: FriendManagementScene.UpdateNeworkStatus.Request)
    
}

class FriendManagementViewController: ReachabilityViewController,
UITableViewDelegate,
FriendManagementViewControllerInput {
    
    var output: FriendManagementViewControllerOutput?
    var router: FriendManagementRouter?
    
    var tableViewDataSource = FriendManagementTableViewDataSource()
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        FriendManagementConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        tableViewDataSource.viewController = self
        tableView.delegate = self
        tableView.dataSource = tableViewDataSource
        tableView.allowsSelection = false
        
        let nib = UINib(nibName: "FriendManagementTableViewCell", bundle: nil)
        tableView.register(nib, forCellReuseIdentifier: FriendManagementCellIdentifiers.friendManagementCellId)
        
        tableView.refreshControl = UIRefreshControl()
        tableView.refreshControl!.attributedTitle = NSAttributedString(string: "")
        tableView.refreshControl!.addTarget(self, action: #selector(refresh), for: UIControlEvents.valueChanged)
        tableView.refreshControl!.beginRefreshing()
        
        fetchFriendsOnLoad()
    }
    
    // MARK: Requests
    
    func fetchFriendsOnLoad() {
        let request = FriendManagementScene.FetchFriends.Request(requestType: .fetchAll)
        output?.fetchFriends(request: request)
    }
    
    func fetchFriendsOnUpdate() {
        let request = FriendManagementScene.FetchFriends.Request(requestType: .fetchUpdate)
        output?.fetchFriends(request: request)
    }
    
    func refresh() {
        fetchFriendsOnUpdate()
    }
    
    func acceptFriend(userName: String) {
        print("Accept \(userName) friend request")
        let request = FriendManagementScene.AcceptFriendRequest.Request(userName: userName)
        output?.acceptFriendRequest(request: request)
    }
    
    func requestFriend(userName: String) {
        print("Send friend request to \(userName)")
        let request = FriendManagementScene.SendFriendRequest.Request(userName: userName)
        output?.sendFriendRequest(request: request)
    }
    
    override func reachabilityChanged(note: Notification) {
        let reachability = note.object as! Reachability
        
        switch reachability.connection {
        case .wifi:
            print("Reachable via WiFi in Friend Management Scene")
            output?.updateNetworkStatus(request: FriendManagementScene.UpdateNeworkStatus.Request(isEnabled: true))
        case .cellular:
            print("Reachable via Cellular in Friend Management Scene")
            output?.updateNetworkStatus(request: FriendManagementScene.UpdateNeworkStatus.Request(isEnabled: true))
        case .none:
            print("Network not reachable in Friend Management Scene")
            output?.updateNetworkStatus(request: FriendManagementScene.UpdateNeworkStatus.Request(isEnabled: false))
        }
    }
    
    // MARK: Display logic
    func displayFriends(response: FriendManagementScene.FetchFriends.ViewModel) {
        tableViewDataSource.section1Model = response.friendsAndAcquaintances
        tableViewDataSource.section2Model = response.otherUsers
        tableViewDataSource.section1HeaderTitle = response.freindsAndAcquaintancesHeaderTitle
        tableViewDataSource.section2HeaderTitle = response.otherUsersHeaderTitle
        tableView.reloadData()
        tableView.refreshControl?.endRefreshing()
    }
    
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension FriendManagementViewController: FriendManagementPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
