//
//  ListChallengesModels.swift
//  YourTakeClean
//
//  Created by John Buonassisi on 2017-03-28.
//  Copyright (c) 2017 JAB. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

struct ListChallenges {
    
    struct RefreshChallenges {
        
        struct Request {
            var challengeType: ChallengeRequestType
        }
    }
    
    struct FetchChallenges {
        
        struct Request {
            var challengeType: ChallengeRequestType
            var isChallengeAndImageLoadSeparated: Bool
        }
        
        struct Response {
            var challengeType: ChallengeResponseType
            var challenges: [ChallengeResponseModel]
            
            enum ChallengeResponseType: Int {
                case userChallenges = 0
                case friendChallenges = 1
                case noFriends = 2
            }
            
            struct ChallengeResponseModel {
                var id : String
                var author : String
                var imageId : String
                var recipients : [String]
                var duration : TimeInterval
                var created : Date
                var hasUserSubmittedTake: Bool?
                var image: UIImage?
                var totalNumberOfVotes: UInt?
            }
        }
        
        struct ViewModel {
            
            var challengeType: ChallengeViewType
            var displayedChallenges: [DisplayedChallenge]
            var isChallengeCreationEnabled: Bool
            
            struct DisplayedChallenge {
                var id: String
                var name: String
                var imageId: String
                var challengeImage: UIImage?
                var expiryLabel: String
                var totalVotesLabel: String?
                var isDrawButtonEnabled: Bool
                var listTakesButtonTitleText: String
            }
            
            enum ChallengeViewType: Int {
                case userChallenges = 0
                case friendChallenges = 1
                case noFriends = 2
                case noChallenges = 3
                
            }
        }
    }
    
    enum ChallengeRequestType: Int {
        case userChallenges = 0
        case friendChallenges = 1
    }
}
