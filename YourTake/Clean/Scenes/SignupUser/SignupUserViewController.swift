//
//  SignupUserViewController.swift
//  YourTake
//
//  Created by John Buonassisi on 2017-04-15.
//  Copyright (c) 2017 Enovi Inc. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol SignupUserViewControllerInput
{
  func displaySignup(viewModel: SignupUser.Signup.ViewModel)
}

protocol SignupUserViewControllerOutput
{
  func signup(request: SignupUser.Signup.Request, completion: ((Bool) -> Void)?)
}

class SignupUserViewController: UIViewController, SignupUserViewControllerInput
{
  var output: SignupUserViewControllerOutput!
  var router: SignupUserRouter!
  
  @IBOutlet weak var emailAddressTextField: UITextField!
  @IBOutlet weak var userNameTextField: UITextField!
  @IBOutlet weak var passwordTextField: UITextField!
  @IBOutlet weak var signupButton: UIButton!
  @IBOutlet weak var emailAddressSwitch: UISwitch!
  @IBOutlet weak var usernameSwitch: UISwitch!
  @IBOutlet weak var passwordSwitch: UISwitch!
  
  // MARK: - Object lifecycle
  
  override func awakeFromNib()
  {
    super.awakeFromNib()
    SignupUserConfigurator.sharedInstance.configure(viewController: self)
  }
  
  // MARK: - View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
  }
  
  override func viewWillAppear(_ animated: Bool) {
    super.viewWillAppear(true)
    navigationController?.navigationBar.isHidden = true
  }
  
  
  // MARK: - Display logic
  
  func displaySignup(viewModel: SignupUser.Signup.ViewModel)
  {
    // NOTE: Display the result from the Presenter
    emailAddressSwitch.setOn(viewModel.isEmailSwitchOn, animated: true)
    usernameSwitch.setOn(viewModel.isUsernameSwitchOn, animated: true)
    passwordSwitch.setOn(viewModel.isPasswordSwitchOn, animated: true)
    signupButton.isEnabled = viewModel.isSignupButtonEnabled
    signupButton.backgroundColor = viewModel.signupButtonColour
  }
  
  // MARK: - Event handling
  
  @IBAction func emailChanged(_ sender: UITextField) {
    updateViewRequest(withType: .emailAddressVerification)
  }
  
  @IBAction func usernameChanged(_ sender: UITextField) {
    updateViewRequest(withType: .userNameVerification)
  }
  
  @IBAction func passwordChanged(_ sender: UITextField) {
    updateViewRequest(withType: .passwordVerification)
  }
  
  @IBAction func signupButtonPressed(_ sender: UIButton) {
    let request = SignupUser.Signup.Request(emailAddress: emailAddressTextField.text!,
                                            username: userNameTextField.text!,
                                            password: passwordTextField.text!,
                                            requestType: .signupRequest)
    output.signup(request: request, completion: { (isSignupSuccess) -> Void in
      if isSignupSuccess {
        self.router.navigateToChallengeScene()
      } else {
        self.router.presentAlert()
      }
    })
  }
  
  @IBAction func performUnwindSegue(_ segue: UIStoryboardSegue) {
    
  }
  
  private func updateViewRequest(withType requestType: SignupUser.Signup.Request.RequestType) {
    let request = SignupUser.Signup.Request(emailAddress: emailAddressTextField.text!,
                                            username: userNameTextField.text!,
                                            password: passwordTextField.text!,
                                            requestType: requestType)
    output.signup(request: request, completion: nil)
  }
  
  
}
