//
//  ChangePasswordViewController.swift
//  YourTake
//
//  Created by John Buonassisi on 2017-09-04.
//  Copyright (c) 2017 Enovi Inc. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ChangePasswordViewControllerInput {
    func displayPasswordChange(viewModel: ChangePassword.ViewModel)
}

protocol ChangePasswordViewControllerOutput {
    func changePassword(request: ChangePassword.Request)
    func validatePasswords(request: ChangePassword.Request)
}

class ChangePasswordViewController: UIViewController, ChangePasswordViewControllerInput {
    
    var output: ChangePasswordViewControllerOutput!
    var router: ChangePasswordRouter!
    
    @IBOutlet weak var newPasswordTextField: UITextField!
    @IBOutlet weak var reTypeNewPasswordTextField: UITextField!
    @IBOutlet weak var saveChangesButton: UIButton!
    
    // MARK: - Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        ChangePasswordConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let tap = UITapGestureRecognizer(target: self,
                                         action: #selector(dismissKeyboard))
        view.addGestureRecognizer(tap)
    }
    
    // MARK: - Event handling
    
    @IBAction func saveChangesButtonPressed(_ sender: UIButton) {
        let request = ChangePassword.Request(newPassword: newPasswordTextField.text!,
                                             reTypeNewPassword: reTypeNewPasswordTextField.text!)
        output.changePassword(request: request);
    }
    
    @IBAction func passwordChanged(_ sender: Any) {
        let request = ChangePassword.Request(newPassword: newPasswordTextField.text!,
                                             reTypeNewPassword: reTypeNewPasswordTextField.text!)
        output.validatePasswords(request: request)
    }
    
    @IBAction func passwordCopyChanged(_ sender: Any) {
        let request = ChangePassword.Request(newPassword: newPasswordTextField.text!,
                                             reTypeNewPassword: reTypeNewPasswordTextField.text!)
        output.validatePasswords(request: request)
    }
    
    // MARK: - Display logic
    
    func displayPasswordChange(viewModel: ChangePassword.ViewModel) {
        // NOTE: Display the result from the Presenter
        if viewModel.isPasswordChanged {
            if let alertModel = viewModel.alertModel {
                _ = self.router.presentAlertAndPopToRoot(title: alertModel.title,
                                                     message: alertModel.message,
                                                     actionTitle: alertModel.actionTitle)
            }
        } else {
            if let alertModel = viewModel.alertModel {
                _ = self.router.presentAlert(title: alertModel.title,
                                             message: alertModel.message,
                                             actionTitle: alertModel.actionTitle)
            }
        }
        saveChangesButton.isEnabled = viewModel.isSaveButtonEnabled
        saveChangesButton.backgroundColor = viewModel.saveButtonColour
    }
    
    func dismissKeyboard() {
        view.endEditing(true)
    }
}
