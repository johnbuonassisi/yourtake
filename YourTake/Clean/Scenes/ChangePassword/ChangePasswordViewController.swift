//
//  ChangePasswordViewController.swift
//  YourTake
//
//  Created by John Buonassisi on 2017-09-04.
//  Copyright (c) 2017 Enovi Inc. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ChangePasswordViewControllerInput {
    func displaySomething(viewModel: ChangePassword.ViewModel)
}

protocol ChangePasswordViewControllerOutput {
    func changePassword(request: ChangePassword.Request)
}

class ChangePasswordViewController: UIViewController, ChangePasswordViewControllerInput {
    
    var output: ChangePasswordViewControllerOutput!
    var router: ChangePasswordRouter!
    
    @IBOutlet weak var reTypeNewPasswordTextField: UITextField!
    @IBOutlet weak var oldPasswordTextField: UITextField!
    @IBOutlet weak var newPasswordTextField: UITextField!
    @IBOutlet weak var saveChangesButton: UIButton!
    @IBOutlet weak var forgotPasswordButton: UIButton!
    
    // MARK: - Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        ChangePasswordConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomethingOnLoad()
    }
    
    // MARK: - Event handling
    
    func doSomethingOnLoad() {
        // NOTE: Ask the Interactor to do some work
    }
    
    @IBAction func saveChangesButtonPressed(_ sender: UIButton) {
        let request = ChangePassword.Request(oldPassword: oldPasswordTextField.text!,
                                             newPassword: newPasswordTextField.text!,
                                             reTypeNewPassword: reTypeNewPasswordTextField.text!);
        output.changePassword(request: request);
    }
    
    
    // MARK: - Display logic
    
    func displaySomething(viewModel: ChangePassword.ViewModel) {
        // NOTE: Display the result from the Presenter
        
        // nameTextField.text = viewModel.name
    }
}
