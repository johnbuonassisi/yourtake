//
//  ChangePasswordRouter.swift
//  YourTake
//
//  Created by John Buonassisi on 2017-09-04.
//  Copyright (c) 2017 Enovi Inc. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ChangePasswordRouterInput {
    func navigateToSomewhere()
}

class ChangePasswordRouter: ChangePasswordRouterInput {
    
    weak var viewController: ChangePasswordViewController!
    
    // MARK: - Navigation
    
    func navigateToSomewhere() {
        // NOTE: Teach the router how to navigate to another scene. Some examples follow:
        
        // 1. Trigger a storyboard segue
        // viewController.performSegueWithIdentifier("ShowSomewhereScene", sender: nil)
        
        // 2. Present another view controller programmatically
        // viewController.presentViewController(someWhereViewController, animated: true, completion: nil)
        
        // 3. Ask the navigation controller to push another view controller onto the stack
        // viewController.navigationController?.pushViewController(someWhereViewController, animated: true)
        
        // 4. Present a view controller from a different storyboard
        // let storyboard = UIStoryboard(name: "OtherThanMain", bundle: nil)
        // let someWhereViewController = storyboard.instantiateInitialViewController() as! SomeWhereViewController
        // viewController.navigationController?.pushViewController(someWhereViewController, animated: true)
    }
    
    func present(viewControllerToPresent: UIViewController, completion: (() -> Void)?) {
        self.viewController.present(viewControllerToPresent, animated: true, completion: completion)
    }
    
    func presentAlertAndPopToRoot(title: String?, message: String, actionTitle: String?) -> UIViewController {
        let viewControllerToPresent = presentAlert(title: title, message: message, actionTitle: actionTitle)
        let time = DispatchTime.now() + 3
        DispatchQueue.main.asyncAfter(deadline: time, execute: {
            viewControllerToPresent.dismiss(animated: true, completion:{
                _ = self.viewController.navigationController?.popToRootViewController(animated: true)
            })
        })
        return viewControllerToPresent
    }
    
    func presentAlert(title: String?, message: String, actionTitle: String?) -> UIViewController {
        let alert = UIAlertController(title: title,
                                      message: message,
                                      preferredStyle: .alert)
        if let actionTitle = actionTitle {
            let action = UIAlertAction(title: actionTitle,
                                       style: .default,
                                       handler: {
                                        (action: UIAlertAction!) in alert.dismiss(animated: true, completion: nil)})
            alert.addAction(action)
        }
        present(viewControllerToPresent: alert, completion: nil)
        return viewController
    }
}
